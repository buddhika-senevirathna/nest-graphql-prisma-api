type Pokemon {
  id: ID!
  title: String
  height: Float
  weight: Float
  image: String
  description: String
  createdById: Int
  createdAt: String
  updatedAt: String
}

input NewPokemon {
  title: String!
  height: Float!
  weight: Float!
  image: String!
  description: String!
  createdById: Int
}

type PokemonWhereUniqueInput {
  id: ID
  title: String
}

input UpdatePokemon {
  id: ID!
  title: String
  height: Float
  weight: Float
  image: String
  description: String
  createdById: Int
}

input SortBy{
  title:String
  height:String
  weight:String
  createdAt:String
}

input Filters {
  title:String
  weightfrom:Float
  weightto:Float
  heightFrom:Float
  heightto:Float
  skip:Int
  take:Int
}

type Query {
    pokemons: [Pokemon!]!
    pokemon( id: ID! ): Pokemon
    getPokemons( filters: Filters, sortBy: SortBy ): [Pokemon]
}

type Mutation {
    createPokemon(input: NewPokemon): Pokemon!
    updatePokemon(input: UpdatePokemon): Pokemon
    deletePokemon(id: ID!): Pokemon
}